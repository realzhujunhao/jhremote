#!/usr/bin/env fish

set -g MOUNT_DIR ~/Documents/aws_mount

function help
    set_color red
    echo (basename (status -f)) describe
    echo (basename (status -f)) start/stop instance-name
    echo (basename (status -f)) connect host-name instance-name
    echo (basename (status -f)) mount instance-name mount-path
    set_color normal
    exit 1
end

function describe
    aws ec2 describe-instances \
        --query "Reservations[*].Instances[*].[Tags[0].Value,InstanceType,InstanceId,PublicIpAddress,State.Name]" \
        --output text
end

function start
    if test (count $argv) -ne 1
        help
    end
    set -l name $argv[1]
    set -l instance_ids (aws ec2 describe-instances \
        --filters "Name=tag:Name,Values=$name" \
        --query "Reservations[*].Instances[*].[InstanceId]" \
        --output text)
    echo "starting $name..."
    if not aws ec2 start-instances --instance-ids $instance_ids >/dev/null
        set_color red
        echo start failed
        exit 1
    end
    aws ec2 wait instance-running --instance-ids $instance_ids
    echo started
end

function stop
    if test (count $argv) -ne 1
        help
    end
    set -l name $argv[1]
    set -l instance_ids (aws ec2 describe-instances \
        --filters "Name=tag:Name,Values=$name" \
        --query "Reservations[*].Instances[*].[InstanceId]" \
        --output text)

    echo "stopping $name..."
    if not aws ec2 stop-instances --instance-ids $instance_ids >/dev/null
        set_color red
        echo stop failed
        exit 1
    end
    aws ec2 wait instance-stopped --instance-ids $instance_ids
    echo stopped
end

function connect
    if test (count $argv) -ne 2
        help
    end
    set -l host_name $argv[1]
    set -l instance_name $argv[2]
    set -l ip (aws ec2 describe-instances \
        --filters "Name=tag:Name,Values=$instance_name" \
        --query "Reservations[*].Instances[*].[PublicIpAddress]" \
        --output text)
    if test $ip = "None"
        set_color red
        echo $instance_name is not running
        set_color normal
        exit 1
    end
    cmd_window jhec2 $instance_name "ssh $host_name@$ip"
end

function mount
    if test (count $argv) -ne 2
        help
    end
    set -l instance_name $argv[1]
    set -l host_name $argv[2]
    set -l ip (aws ec2 describe-instances \
        --filters "Name=tag:Name,Values=$instance_name" \
        --query "Reservations[*].Instances[*].[PublicIpAddress]" \
        --output text)
    echo mount $host_name@$ip:~/mount_point to $MOUNT_DIR
    rclone mount \
        --sftp-host $ip \
        :sftp:mount_point \
        $MOUNT_DIR \
        --sftp-user $host_name \
        --sftp-key-file ~/.ssh/id_ed25519 \
        --sftp-shell-type unix \
        --allow-other \
        --allow-non-empty \
        --sftp-md5sum-command md5sum \
        --sftp-sha1sum-command sha1sum \
        --vfs-cache-mode full \
        --dir-cache-time 5s \
        --vfs-cache-max-size 2G \
        --daemon
end

function unmount
    diskutil unmount force $MOUNT_DIR
end

if test (count $argv) -lt 1
    help
end

set_color green
switch $argv[1]
    case describe
        describe
    case start
        start $argv[2]
    case stop
        stop $argv[2]
    case connect
        connect $argv[2] $argv[3]
    case mount
        mount $argv[2] $argv[3]
    case unmount
        unmount
    case '*'
        help
end
set_color normal
